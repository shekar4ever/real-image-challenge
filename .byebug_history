c
@search_record
c
@search_record["cast"]
@search_record.keys[3]
@search_record.keys
@search_record.keys[3].values
@search_record.keys[3]
@search_record.keys[4]
@search_record.keys
@search_record.key
@search_record
c
@search_record
c
response.body
response
c
response = http.request(request)
request = Net::HTTP::Get.new(uri.request_uri)
http = Net::HTTP.new(uri.host, uri.port)
uri = URI.parse("https://data.moviebuff.com/taxi-driver")
continue
response
responce
continue
response
continue
 ::UrlParse.new.get_json_data(params[:search_name])
@search_record
continue
response.code
 request = Net::HTTP::Get.new(uri.request_uri)
http = Net::HTTP.new(uri.host, uri.port)
uri = URI.parse("https://data.moviebuff.com/#{name.parameterize.downcase}")
name.parameterize.downcase
response.code
c
@search_record
c
name
c
continue
result = JSON.parse(response.body)
response.code
response = http.request(request)
request = Net::HTTP::Get.new(uri.request_uri)
http = Net::HTTP.new(uri.host, uri.port)
uri = URI.parse("http://data.moviebuff.com/amitabh-bachchan")
response = Net::HTTP.get uri
uri = URI("https://data.moviebuff.com/#{name.parameterize.downcase}")
uri = URI('https://data.moviebuff.com/amitabh-bachchan')
uri = URI('https://data.moviebuff.com/amitabh-bachchan}')
uri = URI('https://data.moviebuff.com/#{name.parameterize.downcase}')
uri = URI('https://api.github.com/users/octocat')
uri = URI('https://data.moviebuff.com/#{name.parameterize.downcase}')
name
uri = URI('https://data.moviebuff.com/#{name.parameterize.downcase}')
response = Net::HTTP.get uri
uri = URI('https://api.github.com/users/octocat')
 JSON.parse(uri)
 JSON.parse(response)
uri = URI(url)
response = Net::HTTP.get uri
request = Net::HTTP::Get.new(uri.request_uri)
http = Net::HTTP.new(uri.host, uri.port)
  url = "https://data.moviebuff.com/#{name.parameterize.downcase}"
c
url = "https://data.moviebuff.com/#{name.parameterize.downcase}"
c
params
c
name
url = "https://data.moviebuff.com/#{name.parameterize.downcase}"
continue
JSON.parse(open("http://data.moviebuff.com/amitabh-bachchan"))
JSON.load(open("http://data.moviebuff.com/amitabh-bachchan"))
 res = Net::HTTP.get_response(URI.parse(uri))
 uri = URI(url)
url = "https://data.moviebuff.com/#{name.parameterize.downcase}"
name
c
params
c
@search_record
c
url = "https://data.moviebuff.com/"sdfdf"}"
url = "https://data.moviebuff.com/#{name.parameterize.downcase}"
continue
 final_res = "jjj" if res.is_a?(Net::HTTPSuccess)
res = Net::HTTP.get_response(URI.parse(uri))
uri = URI.encode("http://data.moviebuff.com/sekar")
 JSON.parse(res)
res = Net::HTTP.get_response(URI.parse(uri))
 final_res = JSON.parse(res) if res.is_a?(Net::HTTPSuccess)
 final_res = JSON.parse(resp) if res.is_a?(Net::HTTPSuccess)
 final_res = res.body if res.is_a?(Net::HTTPSuccess)
res = Net::HTTP.get_response(URI.parse(uri))
uri = URI.encode("http://data.moviebuff.com/amitabh-bachchan")
http.use_ssl = true
http = Net::HTTP.new(uri.host, uri.port)
uri = URI.parse("https://www.secure.com/")
require "uri"
Net::HTTP.get_response(uri) rescue nil
Net::HTTP.get_response(uri)
 response = Net::HTTP.get(uri)
uri = URI(url)
 url = "https://data.moviebuff.com/#{"sekar"}"
 url = "https://data.moviebuff.com/#{sekar}"
continue
"sss hhhh hjkk adad GGGGG".parameterize.downcase
"sss hhhh hjkk adad".parameterize
"sss hhhh".parameterize
"amitabh bachchan".downcase!.tr!(' ','-')
"amitabh bachchan"
name
continue
uri = URI(url)
"https://data.moviebuff.com/#{name}"
continue
UrlParse::get_json_data("sekar")
require "url_parse.rb"
UrlParse::get_json_data("sekar")
continue
require "url_parse.rb"
require "Url_parse.rb"
require "Url_parse"
UrlParse::get_json_data("sekar")
continue
celebrity_record['movies'].first["name"]
celebrity_record['movies'].first
celebrity_record['movies'].each do |h|  puts h end
celebrity_record['movies'].each |h| do puts h end
end
celebrity_record['movies'].each |h|do puts h
celebrity_record['movies'].each do 
celebrity_record['movies']
celebrity_record['name']
celebrity_record['url'].titleize
celebrity_record['url'].humanize.downcase
celebrity_record['url']
celebrity_record['url'].upcase
celebrity_record['url']
celebrity_record[url]
celebrity_record
params
a
c
params
a
continue
JSON.parse(response)
continue
JSON.parse(response)
response = Net::HTTP.get(uri)
uri = URI(url)
URI(url)
url = 'http://data.moviebuff.com/amitabh-bachchan'
require 'json'
require 'net/http'
params
